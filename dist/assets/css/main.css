html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background: transparent;
  text-decoration: none;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
ul,
ol,
dl {
  margin: 0;
  padding: 0;
}
li {
  list-style: none;
}
hr {
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  -moz-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
*,
*:before,
*:after {
  box-sizing: border-box;
}
html,
body {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background-color: #64ddbb;
  color: #777;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  color: #555;
}
a {
  color: #999;
}
img {
  max-width: 100%;
}
figure {
  margin: 0;
}
.my-component {
  text-align: center !important;
}
.container {
  margin: 0 auto;
  width: 1024px;
}
#main-header {
  background-color: #fff;
  padding: 20px 0;
}
#main-header > * {
  margin: 0 auto;
  width: 1024px;
}
#main-header > .wrapper:before {
  content: '';
  display: table;
}
#main-header > .wrapper:after {
  content: '';
  display: table;
  clear: both;
}
#main-header > .wrapper > .main-logo {
  float: left;
}
#main-header > .wrapper > .login {
  float: right;
  padding: 10px 0;
}
#main-menu {
  border-top: 1px solid #d9d9d9;
  margin-top: 20px;
  padding: 20px 0;
  text-align: center;
}
#main-menu:before {
  content: '';
  display: table;
}
#main-menu:after {
  content: '';
  display: table;
  clear: both;
}
#main-menu > .item {
  width: calc(99.9% * 1/6 - (30px - 30px * 1/6));
  padding: 0 20px;
  position: relative;
}
#main-menu > .item:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
#main-menu > .item:last-child {
  margin-right: 0;
}
#main-menu > .item:nth-child(6n) {
  margin-right: 0;
  float: right;
}
#main-menu > .item:nth-child(6n + 1) {
  clear: both;
}
#main-menu > .item:after {
  background-color: #8c8c8c;
  bottom: -10px;
  content: "";
  display: block;
  height: 2px;
  left: 50%;
  position: relative;
  transition: all 0.3s ease;
  width: 0;
}
#main-menu > .item:hover::after,
#main-menu > .item.-active::after {
  width: 100%;
  left: 0;
}
/*# sourceMappingURL=data:application/json;base64, */